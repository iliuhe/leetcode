# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def insert(self, intervals, newInterval):
        """
        :type intervals: List[Interval]
        :type newInterval: Interval
        :rtype: List[Interval]
        """
        res=[]
        for i in range(len(intervals)):
            # new > itervals[i]
            if intervals[i].end<newInterval.start:
                res.append(intervals[i])
            # new < intervals[i]
            elif intervals[i].start>newInterval.end:
                res.append(newInterval)
                return res+intervals[i:]
            # overlaps
            else:
                newInterval.start=min(newInterval.start,intervals[i].start)
                newInterval.end=max(newInterval.end,intervals[i].end)
        res.append(newInterval)
        return res
