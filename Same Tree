# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    # @param {TreeNode} p
    # @param {TreeNode} q
    # @return {boolean}
    '''
    def isSameTree(self, p, q):
        if not p and not q:
            return True
        if (not p and q) or (p and not q):
            return False
        if p.val!=q.val:
            return False
        return self.isSameTree(p.left,q.left) and self.isSameTree(p.right,q.right)
    '''
    def isSameTree(self,p,q):
        if not p and not q:
            return True
        waitlist1=[p]
        waitlist2=[q]
        while len(waitlist1)==len(waitlist2) and len(waitlist1)!=0:
            p=waitlist1.pop()
            q=waitlist2.pop()
            if not p and not q:
                pass
            elif (not p and q) or (not q and p):
                return False
            elif p.val==q.val:
                waitlist1.append(p.left)
                waitlist1.append(p.right)
                waitlist2.append(q.left)
                waitlist2.append(q.right)
            else:
                return False
        return True
