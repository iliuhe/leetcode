# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    # @param {TreeNode} root
    # @return {boolean}
    '''
    def isBalanced(self, root):
        waitlist=[root]
        while waitlist:
            p=waitlist.pop()
            if p:
                if abs(self.height(p.left)-self.height(p.right))>1:
                    return False
                if p.right:
                    waitlist.append(p.right)
                if p.left:
                    waitlist.append(p.left)
        return True
    '''
    def isBalanced(self,root):
        if not root:
            return True
        return abs(self.height(root.left)-self.height(root.right))<2 and self.isBalanced(root.left) and self.isBalanced(root.right)
    def height(self,root):
        if not root:
            return 0
        return 1+max(self.height(root.left),self.height(root.right))
